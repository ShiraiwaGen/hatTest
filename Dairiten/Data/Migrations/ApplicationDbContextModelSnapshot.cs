// <auto-generated />
using System;
using Dairiten.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dairiten.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Dairiten.Models.m_company", b =>
                {
                    b.Property<string>("Office_day")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Office_end")
                        .HasColumnType("datetime2");

                    b.Property<string>("Office_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Office_start")
                        .HasColumnType("datetime2");

                    b.Property<string>("Office_tel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("bank")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("bank_account_holder")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("bank_account_holder_kana")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("bank_account_no")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("bank_account_type")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("bank_shiten")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("company_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("insurance_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("passbook_symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("m_company", (string)null);
                });

            modelBuilder.Entity("Dairiten.Models.m_dairiten", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("csv_kbn")
                        .HasColumnType("bit");

                    b.Property<string>("dairiten_address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("dairiten_branch")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("dairiten_code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("dairiten_fax")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("dairiten_kbn")
                        .HasColumnType("int");

                    b.Property<string>("dairiten_manager")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("dairiten_mei")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("dairiten_ritsu")
                        .HasColumnType("real");

                    b.Property<string>("dairiten_tel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("dairiten_zip")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<bool>("fax_kbn")
                        .HasColumnType("bit");

                    b.Property<bool>("haigyo_kbn")
                        .HasColumnType("bit");

                    b.Property<string>("license_no")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("license_update")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("online_payment")
                        .HasColumnType("bit");

                    b.Property<string>("seisan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("todofuken_code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("id");

                    b.ToTable("m_dairiten", (string)null);
                });

            modelBuilder.Entity("Dairiten.Models.m_master", b =>
                {
                    b.Property<int>("m_master_kbn_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("m_master_kbn_id"), 1L, 1);

                    b.Property<string>("item_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("item_no")
                        .HasColumnType("int");

                    b.HasKey("m_master_kbn_id");

                    b.ToTable("m_master", (string)null);
                });

            modelBuilder.Entity("Dairiten.Models.m_master_kbn", b =>
                {
                    b.Property<int>("master_kbn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("master_kbn"), 1L, 1);

                    b.Property<string>("master_kbn_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("master_kbn");

                    b.ToTable("m_master_kbn", (string)null);
                });

            modelBuilder.Entity("Dairiten.Models.m_shohin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("hokenkikan")
                        .HasColumnType("int");

                    b.Property<int>("hokenryo")
                        .HasColumnType("int");

                    b.Property<string>("shohin_name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("id");

                    b.ToTable("m_shohin", (string)null);
                });

            modelBuilder.Entity("Dairiten.Models.m_tax", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<DateTime>("kaisibi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("shuryobi")
                        .HasColumnType("datetime2");

                    b.Property<float>("tax")
                        .HasColumnType("real");

                    b.ToTable("m_tax", (string)null);
                });

            modelBuilder.Entity("Dairiten.Models.t_bukken", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("b_address1")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("b_address2")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("b_address3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("b_address4")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("b_kodate")
                        .HasColumnType("int");

                    b.Property<int>("b_zip")
                        .HasMaxLength(7)
                        .HasColumnType("int");

                    b.Property<int>("bukken_no")
                        .HasColumnType("int");

                    b.Property<int>("m_dairiten_id")
                        .HasMaxLength(12)
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("t_bukken", (string)null);
                });

            modelBuilder.Entity("Dairiten.Models.t_company_employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("employee_code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("employee_del")
                        .HasColumnType("bit");

                    b.Property<string>("employee_mei")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("employee_pass")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("employee_sei")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("pass_day")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("t_company_employee", (string)null);
                });

            modelBuilder.Entity("Dairiten.Models.t_dairiten_employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("employee_code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("employee_del")
                        .HasColumnType("bit");

                    b.Property<string>("employee_mei")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("employee_pass")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("employee_sei")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("m_dairiten_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("pass_day")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("t_dairiten_employee", (string)null);
                });

            modelBuilder.Entity("Dairiten.Models.t_karibukken", b =>
                {
                    b.Property<string>("b_address1")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("b_address2")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("b_address3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("b_address4")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("b_kodate")
                        .HasColumnType("int");

                    b.Property<int>("b_zip")
                        .HasMaxLength(7)
                        .HasColumnType("int");

                    b.Property<int>("bukken_no")
                        .HasColumnType("int");

                    b.Property<int>("employee_key")
                        .HasColumnType("int");

                    b.Property<int>("m_dairiten_id")
                        .HasMaxLength(12)
                        .HasColumnType("int");

                    b.ToTable("t_karibukken", (string)null);
                });

            modelBuilder.Entity("Dairiten.Models.t_keiyaku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("bank")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("bank_account_holder")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("bank_account_holder_kana")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("bank_account_no")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("bank_account_type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("bank_shiten")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("customer_id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("customer_page")
                        .HasColumnType("bit");

                    b.Property<string>("customer_pass")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("customer_pass_day")
                        .HasColumnType("datetime2");

                    b.Property<string>("daihyosha_mei")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("daihyosha_sei")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("daihyosha_yakushoku")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("dairiten_ritsu")
                        .HasColumnType("real");

                    b.Property<int>("dairiten_tesuryo")
                        .HasColumnType("int");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<string>("employee_key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fubiriyu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("fukusu_tokuyaku")
                        .HasColumnType("bit");

                    b.Property<string>("gyoshu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("gyoshu_sumi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("h_address1")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("h_address2")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("h_address3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("h_address4")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("h_birth")
                        .HasColumnType("datetime2");

                    b.Property<string>("h_bukken_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("h_floor")
                        .HasColumnType("bit");

                    b.Property<bool>("h_kodate")
                        .HasColumnType("bit");

                    b.Property<string>("h_mei")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("h_mei_kana")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("h_sei")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("h_sei_kana")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("h_zip")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<int>("hakkenshoken")
                        .HasColumnType("int");

                    b.Property<int>("haraikomihyo_kbn")
                        .HasColumnType("int");

                    b.Property<int>("henreikin")
                        .HasColumnType("int");

                    b.Property<DateTime>("henreikin_day")
                        .HasColumnType("datetime2");

                    b.Property<int>("hihokensha_kbn")
                        .HasColumnType("int");

                    b.Property<bool>("hojin_tokuyaku")
                        .HasColumnType("bit");

                    b.Property<int>("hojinkeitai")
                        .HasColumnType("int");

                    b.Property<int>("hojinkeitai_ichi")
                        .HasColumnType("int");

                    b.Property<string>("hojinkeitai_other")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("hojinmei_kana")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("hojinmei_kanji")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("hokenkeiyakusho_kbn")
                        .HasColumnType("bit");

                    b.Property<int>("hokenkikan")
                        .HasColumnType("int");

                    b.Property<int>("hokenryo")
                        .HasColumnType("int");

                    b.Property<DateTime>("hokenryo_ryoshubi")
                        .HasColumnType("datetime2");

                    b.Property<int>("hokenryo_ryoshugaku")
                        .HasColumnType("int");

                    b.Property<int>("hokenryotorihiki_kbn")
                        .HasColumnType("int");

                    b.Property<DateTime>("hokenshiki")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("hokenshuki")
                        .HasColumnType("datetime2");

                    b.Property<int>("hoshonin_kbn")
                        .HasColumnType("int");

                    b.Property<string>("hoshonin_kbn_other")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("ichijihozon")
                        .HasColumnType("bit");

                    b.Property<int>("idojiyu")
                        .HasColumnType("int");

                    b.Property<bool>("ikokakunin")
                        .HasColumnType("bit");

                    b.Property<int>("inputter_kbn")
                        .HasColumnType("int");

                    b.Property<string>("k_address1")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("k_address2")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("k_address3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("k_address4")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("k_birth")
                        .HasColumnType("datetime2");

                    b.Property<string>("k_bukken_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("k_floor")
                        .HasColumnType("bit");

                    b.Property<bool>("k_kodate")
                        .HasColumnType("bit");

                    b.Property<string>("k_mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("k_mei")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("k_mei_kana")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("k_mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("k_onaji")
                        .HasColumnType("bit");

                    b.Property<string>("k_sei")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("k_sei_kana")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("k_tel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("k_zip")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<DateTime>("kaishubi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("kakuteibi")
                        .HasColumnType("datetime2");

                    b.Property<string>("kanrigaiido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("keijozuki")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("keiyakubi")
                        .HasColumnType("datetime2");

                    b.Property<int>("keiyakujokyo")
                        .HasColumnType("int");

                    b.Property<int>("keiyakusha_kbn")
                        .HasColumnType("int");

                    b.Property<DateTime>("keiyakusho_hakkobi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("koshin_nengetsu")
                        .HasColumnType("datetime2");

                    b.Property<int>("m_dairiten_id")
                        .HasColumnType("int");

                    b.Property<int>("m_shohin_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("manki_nengetsu")
                        .HasColumnType("datetime2");

                    b.Property<bool>("modoribin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("moshikomibi")
                        .HasColumnType("datetime2");

                    b.Property<int>("moshikomijokyo")
                        .HasColumnType("int");

                    b.Property<DateTime>("moshikomisho_day")
                        .HasColumnType("datetime2");

                    b.Property<int>("old_keiyaku_key")
                        .HasColumnType("int");

                    b.Property<string>("old_shoken_no")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("other_code1")
                        .HasColumnType("int");

                    b.Property<int>("other_code2")
                        .HasColumnType("int");

                    b.Property<int>("other_code3")
                        .HasColumnType("int");

                    b.Property<bool>("other_hoken")
                        .HasColumnType("bit");

                    b.Property<string>("other_hoken_company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("other_hoken_manki")
                        .HasColumnType("datetime2");

                    b.Property<int>("other_hoken_money")
                        .HasColumnType("int");

                    b.Property<string>("other_hoken_shurui")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("other_hoken_umu")
                        .HasColumnType("bit");

                    b.Property<string>("other_tokkijiko")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("passbook_symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("rireki_no")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("saishin_flg")
                        .HasColumnType("bit");

                    b.Property<DateTime>("seiritsubi")
                        .HasColumnType("datetime2");

                    b.Property<int>("seiritsujokyo")
                        .HasColumnType("int");

                    b.Property<int>("senyumenseki")
                        .HasColumnType("int");

                    b.Property<string>("shiharaisaki")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("shiten")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("shohin_kbn")
                        .HasColumnType("int");

                    b.Property<string>("shoken_no")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("shomei")
                        .HasColumnType("bit");

                    b.Property<int>("shomihokenryo")
                        .HasColumnType("int");

                    b.Property<int>("shukinhoho")
                        .HasColumnType("int");

                    b.Property<DateTime>("sofuyoteizuki")
                        .HasColumnType("datetime2");

                    b.Property<int>("t_moshikomisho_id")
                        .HasColumnType("int");

                    b.Property<int>("t_nyukin_id")
                        .HasColumnType("int");

                    b.Property<int>("t_seikyu_id")
                        .HasColumnType("int");

                    b.Property<int>("tetsuzukiiraishohakko_kbn")
                        .HasColumnType("int");

                    b.Property<bool>("tokuyaku1")
                        .HasColumnType("bit");

                    b.Property<string>("tokuyaku2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("torokubi")
                        .HasColumnType("datetime2");

                    b.Property<int>("uketsuke_kbn")
                        .HasColumnType("int");

                    b.Property<DateTime>("update_day")
                        .HasColumnType("datetime2");

                    b.Property<int>("update_kbn")
                        .HasColumnType("int");

                    b.Property<bool>("yayoi_flg")
                        .HasColumnType("bit");

                    b.Property<int>("yoho")
                        .HasColumnType("int");

                    b.Property<int>("yukojotai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("t_keiyaku", (string)null);
                });

            modelBuilder.Entity("Dairiten.Models.t_moshikomisho", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("sofu_day")
                        .HasColumnType("int");

                    b.Property<int>("sofu_kbn")
                        .HasColumnType("int");

                    b.Property<string>("sofuyoteizuki")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("t_dairiten_employee_id")
                        .HasColumnType("int");

                    b.Property<int>("t_seikyu_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("t_moshikomisho", (string)null);
                });

            modelBuilder.Entity("Dairiten.Models.t_nayose", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("error_datetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("nayose_error_kbn")
                        .HasColumnType("int");

                    b.Property<int>("nayose_kbn")
                        .HasColumnType("int");

                    b.Property<string>("riyu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("shori_datetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("t_company_employee_id")
                        .HasColumnType("int");

                    b.Property<int>("t_keiyaku_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("t_nayose", (string)null);
                });

            modelBuilder.Entity("Dairiten.Models.t_seikyu", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("haraikomi_day")
                        .HasColumnType("datetime2");

                    b.Property<int>("haraikomi_kbn")
                        .HasColumnType("int");

                    b.Property<DateTime>("keijobi")
                        .HasColumnType("datetime2");

                    b.Property<int>("m_dairiten_id")
                        .HasColumnType("int");

                    b.Property<int>("seikyu_no")
                        .HasColumnType("int");

                    b.Property<int>("seisankingaku")
                        .HasColumnType("int");

                    b.Property<int>("t_company_employee_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("t_seikyu", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
